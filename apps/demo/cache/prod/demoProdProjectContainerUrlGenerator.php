<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * demoProdProjectContainerUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class demoProdProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        'synapse_admin_template_init' => array (  0 =>   array (    0 => '_locale',    1 => 'templateType',    2 => 'contentType',    3 => 'contentId',  ),  1 =>   array (    '_controller' => 'Synapse\\Admin\\Bundle\\Controller\\TemplateAdminController::initAction',    'contentId' => NULL,    '_locale' => 'fr',  ),  2 =>   array (    'contentId' => '\\d*',    '_locale' => 'en|fr',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d*',      3 => 'contentId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'contentType',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'templateType',    ),    3 =>     array (      0 => 'text',      1 => '/templates/init',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => 'en|fr',      3 => '_locale',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'localhost',    ),  ),  5 =>   array (  ),),
        'synapse_admin_template_edition' => array (  0 =>   array (    0 => '_locale',    1 => 'id',  ),  1 =>   array (    '_controller' => 'Synapse\\Admin\\Bundle\\Controller\\TemplateAdminController::editAction',    '_locale' => 'fr',  ),  2 =>   array (    'id' => '\\d+',    '_locale' => 'en|fr',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/templates',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => 'en|fr',      3 => '_locale',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'localhost',    ),  ),  5 =>   array (  ),),
        'synapse_admin_template_add_component' => array (  0 =>   array (    0 => '_locale',    1 => 'id',    2 => 'zoneTypeId',    3 => 'componentTypeId',  ),  1 =>   array (    '_controller' => 'Synapse\\Admin\\Bundle\\Controller\\TemplateAdminController::addComponentAction',    '_locale' => 'fr',  ),  2 =>   array (    'id' => '\\d+',    '_locale' => 'en|fr',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'componentTypeId',    ),    1 =>     array (      0 => 'text',      1 => '/add_component',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'zoneTypeId',    ),    3 =>     array (      0 => 'text',      1 => '/zone',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/templates',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => 'en|fr',      3 => '_locale',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'localhost',    ),  ),  5 =>   array (  ),),
        'synapse_admin_template_list' => array (  0 =>   array (    0 => '_locale',  ),  1 =>   array (    '_controller' => 'Synapse\\Admin\\Bundle\\Controller\\TemplateAdminController::listAction',    '_locale' => 'fr',  ),  2 =>   array (    '_locale' => 'en|fr',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/templates/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'en|fr',      3 => '_locale',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'localhost',    ),  ),  5 =>   array (  ),),
        'synapse_admin_component_delete' => array (  0 =>   array (    0 => '_locale',    1 => 'zoneId',    2 => 'componentId',  ),  1 =>   array (    '_controller' => 'Synapse\\Admin\\Bundle\\Controller\\ZoneAdminController::deleteAction',    '_locale' => 'fr',  ),  2 =>   array (    'id' => '\\d+',    '_locale' => 'en|fr',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'componentId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'zoneId',    ),    3 =>     array (      0 => 'text',      1 => '/zones',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => 'en|fr',      3 => '_locale',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'localhost',    ),  ),  5 =>   array (  ),),
        'synapse_admin_media_list' => array (  0 =>   array (    0 => '_locale',  ),  1 =>   array (    '_controller' => 'synapse.media.admin_controller:listAction',    '_locale' => 'fr',  ),  2 =>   array (    '_locale' => 'en|fr',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/medias/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'en|fr',      3 => '_locale',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'localhost',    ),  ),  5 =>   array (  ),),
        'synapse_admin_media_xhr_upload' => array (  0 =>   array (    0 => '_locale',  ),  1 =>   array (    '_controller' => 'synapse.media.admin_controller:xhrFileUploadAction',    '_locale' => 'fr',  ),  2 =>   array (    '_method' => 'POST',    '_locale' => 'en|fr',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/medias/xhr/upload',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'en|fr',      3 => '_locale',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'localhost',    ),  ),  5 =>   array (  ),),
        'synapse_admin_image_edition' => array (  0 =>   array (    0 => '_locale',    1 => 'id',  ),  1 =>   array (    '_controller' => 'synapse.image.admin_controller:editAction',    '_locale' => 'fr',  ),  2 =>   array (    'id' => '\\d+',    '_locale' => 'en|fr',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/medias/images',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => 'en|fr',      3 => '_locale',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'localhost',    ),  ),  5 =>   array (  ),),
        'synapse_admin_image_xhr_format' => array (  0 =>   array (    0 => '_locale',    1 => 'id',    2 => 'formatName',  ),  1 =>   array (    '_controller' => 'synapse.image.admin_controller:xhrFormatAction',    '_locale' => 'fr',  ),  2 =>   array (    '_method' => 'POST',    'id' => '\\d+',    'formatName' => '\\w+',    '_locale' => 'en|fr',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\w+',      3 => 'formatName',    ),    1 =>     array (      0 => 'text',      1 => '/xhr/format',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/medias/images',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => 'en|fr',      3 => '_locale',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'localhost',    ),  ),  5 =>   array (  ),),
        'synapse_admin_page_list' => array (  0 =>   array (    0 => '_locale',  ),  1 =>   array (    '_controller' => 'synapse.page.admin_controller:listAction',    '_locale' => 'fr',  ),  2 =>   array (    '_locale' => 'en|fr',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pages/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'en|fr',      3 => '_locale',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'localhost',    ),  ),  5 =>   array (  ),),
        'synapse_admin_page_creation' => array (  0 =>   array (    0 => '_locale',  ),  1 =>   array (    '_controller' => 'synapse.page.admin_controller:createAction',    '_locale' => 'fr',  ),  2 =>   array (    '_locale' => 'en|fr',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pages/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'en|fr',      3 => '_locale',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'localhost',    ),  ),  5 =>   array (  ),),
        'synapse_admin_page_edition' => array (  0 =>   array (    0 => '_locale',    1 => 'id',  ),  1 =>   array (    '_controller' => 'synapse.page.admin_controller:editAction',    '_locale' => 'fr',  ),  2 =>   array (    'id' => '\\d+',    '_locale' => 'en|fr',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/pages',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => 'en|fr',      3 => '_locale',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'localhost',    ),  ),  5 =>   array (  ),),
        'synapse_admin_page_preview' => array (  0 =>   array (    0 => '_locale',    1 => 'id',  ),  1 =>   array (    '_controller' => 'Synapse\\Page\\Bundle\\Controller\\PageContentController::previewAction',    '_locale' => 'fr',  ),  2 =>   array (    'id' => '\\d+',    '_locale' => 'en|fr',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/preview',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/pages',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => 'en|fr',      3 => '_locale',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'localhost',    ),  ),  5 =>   array (  ),),
        'default_admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction',    'path' => '/fr/pages',    'permanent' => true,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'localhost',    ),  ),  5 =>   array (  ),),
        'synapse_content_type_page' => array (  0 =>   array (    0 => '_locale',    1 => 'path',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Synapse\\Page\\Bundle\\Controller\\PageContentController::renderAction',    '_format' => 'html',    '_locale' => 'fr',  ),  2 =>   array (    'path' => '[^.]*',    '_locale' => 'en|fr',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^.]*',      3 => 'path',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => 'en|fr',      3 => '_locale',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'demo.synapse.dev',    ),  ),  5 =>   array (  ),),
        'default_front' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction',    'path' => '/fr',    'permanent' => true,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (    0 =>     array (      0 => 'text',      1 => 'demo.synapse.dev',    ),  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
